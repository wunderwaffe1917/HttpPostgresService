#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API endpoints

API_URL="http://localhost:5000"
TOKEN=""

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Flask API"
echo "========================"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ª–æ–≥–æ–≤
get_admin_token() {
    echo "üìù –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ª–æ–≥–æ–≤..."
    TOKEN=$(docker-compose logs app 2>/dev/null | grep "Created admin token:" | tail -1 | cut -d' ' -f4)
    if [ -z "$TOKEN" ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –ª–æ–≥–æ–≤"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose logs app | grep 'Created admin token'"
        exit 1
    fi
    echo "‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${TOKEN:0:20}..."
}

# –¢–µ—Å—Ç health check
test_health() {
    echo ""
    echo "üè• –¢–µ—Å—Ç Health Check..."
    response=$(curl -s -w "%{http_code}" -o /tmp/response.json "$API_URL/api/health")
    if [ "$response" = "200" ]; then
        echo "‚úÖ Health check —É—Å–ø–µ—à–µ–Ω"
        cat /tmp/response.json | jq . 2>/dev/null || cat /tmp/response.json
    else
        echo "‚ùå Health check –Ω–µ—É–¥–∞—á–µ–Ω (–∫–æ–¥: $response)"
    fi
}

# –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
test_create_record() {
    echo ""
    echo "üìù –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏..."
    response=$(curl -s -w "%{http_code}" -X POST \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"title": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å", "content": "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Ç–µ—Å—Ç–∞", "category": "test"}' \
        -o /tmp/response.json \
        "$API_URL/api/records")
    
    if [ "$response" = "201" ]; then
        echo "‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞"
        cat /tmp/response.json | jq . 2>/dev/null || cat /tmp/response.json
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ (–∫–æ–¥: $response)"
        cat /tmp/response.json
    fi
}

# –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
test_get_records() {
    echo ""
    echo "üìã –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π..."
    response=$(curl -s -w "%{http_code}" \
        -H "Authorization: Bearer $TOKEN" \
        -o /tmp/response.json \
        "$API_URL/api/records")
    
    if [ "$response" = "200" ]; then
        echo "‚úÖ –ó–∞–ø–∏—Å–∏ –ø–æ–ª—É—á–µ–Ω—ã"
        cat /tmp/response.json | jq . 2>/dev/null || cat /tmp/response.json
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π (–∫–æ–¥: $response)"
        cat /tmp/response.json
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Docker Compose –∑–∞–ø—É—â–µ–Ω
    if ! docker-compose ps | grep -q "Up"; then
        echo "‚ùå Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./docker-run.sh"
        exit 1
    fi
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    get_admin_token
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
    test_health
    test_create_record
    test_get_records
    
    echo ""
    echo "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo "üåê –û—Ç–∫—Ä–æ–π—Ç–µ $API_URL –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
}

# –ó–∞–ø—É—Å–∫
main